#!/bin/bash

cd "$(dirname "`readlink -f "$0"`")"
export SCRIPTS_PATH="$(pwd)"

fatal () {
    echo "Fatal error!"
    exit 1
}

if [[ $1 == tkg ]] ; then
    version="$2"
    if [[ -z $version ]] ; then
        echo "Use: 02_get_wine tkg VESRION"
        exit 0
    fi
#     git clone https://github.com/Kron4ek/wine-tkg "${SCRIPTS_PATH}/wine-tkg/"
    wget https://github.com/Kron4ek/wine-tkg/archive/refs/tags/$version.tar.gz || fatal
    tar -xf $version.tar.gz || fatal
    rm -f $version.tar.gz || fatal
    mv wine-tkg-$version wine-tkg || fatal
    pushd "${SCRIPTS_PATH}/wine-tkg/" || fatal

    echo -e "-----------------------------------------\nAdding 001-wine-tkg-to-lg patches:"
    patch -Np1 < ../patches/001-wine-tkg-to-lg.patch || fatal

    popd || fatal
elif [[ $1 == ge ]] ; then
    if [[ ! -d "${SCRIPTS_PATH}/proton-ge" ]] ; then
        git clone --recurse-submodules http://github.com/gloriouseggroll/proton-ge-custom || fatal
        mv "${SCRIPTS_PATH}/proton-ge-custom/wine" "${SCRIPTS_PATH}/proton-ge" || fatal
        pushd "${SCRIPTS_PATH}/proton-ge-custom" || fatal
        git log -1 | grep GE-Proton | awk -F'GE-Proton' '{print $2}' > ${SCRIPTS_PATH}/proton-ge/GE_VER || fatal
        popd || fatal
        cp -fr "${SCRIPTS_PATH}/proton-ge" "${SCRIPTS_PATH}/proton-ge-bak"
        rm -fr "${SCRIPTS_PATH}/proton-ge-custom" || fatal
    fi

    cd "${SCRIPTS_PATH}/proton-ge" || fatal

    echo -e "-----------------------------------------\nAdding De-steamify-proton-s-WINE_for_PortProton patches:\n"
    patch -Np1 < ../patches/01-De-steamify-proton-s-WINE_for_PortProton.patch || fatal

#     echo -e "-----------------------------------------\nAdding proton-9.0 patches:\n"
#     patch -Np1 < ../patches/proton-9.0.patch || fatal
    sed -i '/media-converter/d' "${SCRIPTS_PATH}/proton-ge/dlls/winegstreamer/Makefile.in"
    sed -i 's/wma_decoder.c \\/wma_decoder.c/' "${SCRIPTS_PATH}/proton-ge/dlls/winegstreamer/Makefile.in"

    echo -e "-----------------------------------------\nAdding dualsense patches:\n"
    patch -Np1 < ../patches/dualsense/0001-pending-review-mmdevapi-support-VT_CLSID-for-contain.patch || fatal
    patch -Np1 < ../patches/dualsense/0002-pending-review-mmdevapi-decode-ContainerId-property-.patch || fatal
    patch -Np1 < ../patches/dualsense/0003-pending-review-mmdevapi-copy-ContainerID-from-audio-.patch || fatal
    patch -Np1 < ../patches/dualsense/0004-pending-review-mmdevapi-Invalidate-ContainerID-of-un.patch || fatal
    patch -Np1 < ../patches/dualsense/0005-draft-winepulse-Store-PulseAudio-device-s-sysfs-path.patch || fatal
    patch -Np1 < ../patches/dualsense/0006-draft-winepulse-Add-support-for-containerId-property.patch || fatal
    patch -Np1 < ../patches/dualsense/0007-draft-winebus-store-container-sysfs-path-from-udev-b.patch || fatal
    patch -Np1 < ../patches/dualsense/0008-draft-winebus-implement-BusQueryContainerID-based-on.patch || fatal
    patch -Np1 < ../patches/dualsense/0009-WiP-Implement-SetupDiGetDeviceInterfacePropertyW-for.patch || fatal

#     echo -e "-----------------------------------------\nAdding WINEHAGS patches:\n"
#     patch -Np1 < ../patches/wine-hags-spoof.patch || fatal
else
    echo "Use: 02_get_wine < tkg | ge >"
    exit 0
fi

echo -e "\nDone\n"

# ${SCRIPTS_PATH}/03_build_wine_debian_multi.sh
