diff --git a/dlls/ntdll/unix/virtual.c b/dlls/ntdll/unix/virtual.c
index 4537dd2..61239e1 100644
--- a/dlls/ntdll/unix/virtual.c
+++ b/dlls/ntdll/unix/virtual.c
@@ -456,41 +456,7 @@ static void kernel_writewatch_reset( void *start, SIZE_T len )
 
 static void kernel_writewatch_register_range( struct file_view *view, void *base, size_t size )
 {
-    struct uffdio_register uffdio_register;
-    struct uffdio_writeprotect wp;
-
-    if (!(view->protect & VPROT_WRITEWATCH) || !use_kernel_writewatch) return;
-
-    madvise( base, size, MADV_NOHUGEPAGE );
-    if (use_kernel_writewatch == 2)
-    {
-        kernel_writewatch_reset( base, size );
-        return;
-    }
-
-    uffdio_register.range.start = (UINT_PTR)base;
-    uffdio_register.range.len = size;
-    uffdio_register.mode = UFFDIO_REGISTER_MODE_WP;
-    if (ioctl( uffd_fd, UFFDIO_REGISTER, &uffdio_register ) == -1)
-    {
-        ERR( "ioctl( UFFDIO_REGISTER ) failed, %s.\n", strerror(errno) );
-        return;
-    }
-
-    if (!(uffdio_register.ioctls & UFFDIO_WRITEPROTECT))
-    {
-        ERR( "uffdio_register.ioctls %s.\n", wine_dbgstr_longlong(uffdio_register.ioctls) );
-        return;
-    }
-    wp.range.start = (UINT_PTR)base;
-    wp.range.len = size;
-    wp.mode = UFFDIO_WRITEPROTECT_MODE_WP;
-
-    if (ioctl(uffd_fd, UFFDIO_WRITEPROTECT, &wp) == -1)
-    {
-        perror("ioctl(UFFDIO_WRITEPROTECT)");
-        exit(-1);
-    }
+    return;
 }
 
 static NTSTATUS kernel_soft_dirty_get_write_watches( void *base, SIZE_T size, void **addresses, ULONG_PTR *count, BOOL reset )
diff --git a/dlls/winegstreamer/Makefile.in b/dlls/winegstreamer/Makefile.in
index a26ac0b..71258a3 100644
--- a/dlls/winegstreamer/Makefile.in
+++ b/dlls/winegstreamer/Makefile.in
@@ -31,11 +31,4 @@ SOURCES = \
 	wg_transform.c \
 	winegstreamer_classes.idl \
 	wm_reader.c \
-	wma_decoder.c \
-	media-converter/audioconv.c \
-	media-converter/audioconvbin.c \
-	media-converter/fossilize.c \
-	media-converter/lib.c \
-	media-converter/murmur3.c \
-	media-converter/protondemuxer.c \
-	media-converter/videoconv.c
+	wma_decoder.c
diff --git a/dlls/winegstreamer/unixlib.c b/dlls/winegstreamer/unixlib.c
index a285db2..da8e526 100644
--- a/dlls/winegstreamer/unixlib.c
+++ b/dlls/winegstreamer/unixlib.c
@@ -342,13 +342,6 @@ NTSTATUS wg_init_gstreamer(void *arg)
         }
     }
 
-    if (!media_converter_init())
-    {
-        GST_ERROR("Failed to init media converter.");
-        gst_object_unref(gl_display);
-        return STATUS_UNSUCCESSFUL;
-    }
-
     return STATUS_SUCCESS;
 }
 
diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
index 1cd44a9..6ed3e4d 100644
--- a/dlls/winegstreamer/wg_parser.c
+++ b/dlls/winegstreamer/wg_parser.c
@@ -248,20 +248,6 @@ static NTSTATUS wg_parser_stream_get_codec_format(void *args)
     struct wg_parser_stream_get_codec_format_params *params = args;
     struct wg_parser_stream *stream = get_stream(params->stream);
 
-    {
-        /* HACK: Return untranscoded codec format for transcoded stream. */
-        struct wg_format untranscoded_format;
-
-        untranscoded_format = stream->preferred_format;
-        if (get_untranscoded_stream_format(stream->parser->container, stream->number, &untranscoded_format))
-        {
-            *params->format = untranscoded_format;
-            return S_OK;
-        }
-
-        GST_WARNING("Failed to get untranscoded codec format for stream %u.\n", stream->number);
-    }
-
     *params->format = format_is_compressed(&stream->codec_format) ?
             stream->codec_format :
             stream->preferred_format;
diff --git a/dlls/winegstreamer/wg_source.c b/dlls/winegstreamer/wg_source.c
index 6e000e3..dc2ef0f 100644
--- a/dlls/winegstreamer/wg_source.c
+++ b/dlls/winegstreamer/wg_source.c
@@ -82,23 +82,7 @@ static GstCaps *detect_caps_from_data(const char *url, const void *data, guint s
     GstCaps *caps;
     gchar *str;
 
-    if (!(caps = gst_type_find_helper_for_data_with_extension(NULL, data, size,
-            extension ? extension + 1 : NULL, &probability)))
-    {
-        GST_ERROR("Failed to detect caps for url %s, data %p, size %u", url, data, size);
-        return NULL;
-    }
-
-    str = gst_caps_to_string(caps);
-    if (probability > GST_TYPE_FIND_POSSIBLE)
-        GST_INFO("Detected caps %s with probability %u for url %s, data %p, size %u",
-                str, probability, url, data, size);
-    else
-        GST_FIXME("Detected caps %s with probability %u for url %s, data %p, size %u",
-                str, probability, url, data, size);
-    g_free(str);
-
-    return caps;
+    return NULL;
 }
 
 static GstPad *create_pad_with_caps(GstPadDirection direction, GstCaps *caps)
